#!/usr/bin/python3
# challenge

import sys
import math

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollard_rho(n):
    def f(x):
        return (x**2 + 1) % n

    x, y, d = 2, 2, 1
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)
    return d

def factorize_rsa(num):
    factors = []
    while num > 1:
        if num % 2 == 0:
            factors.append(2)
            num //= 2
            continue
        factor = pollard_rho(num)
        factors.append(factor)
        num //= factor
    return factors

def main():
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        return

    input_file = sys.argv[1]

    with open(input_file, 'r') as file:
        numbers = file.readlines()

    for num in numbers:
        num = int(num.strip())
        factors = factorize_rsa(num)
        print(f"{num}={'*'.join(map(str, factors))}")

if __name__ == "__main__":
    main()
